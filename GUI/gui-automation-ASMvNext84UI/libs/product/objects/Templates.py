"""
Author: Saikumar Kalyankrishnan
Created: Mar 14th 2017
Description: Object Repository for Templates Page
"""

class Templates():
    def TemplatesObjects (self, key):
        TemplatesObjects = {'title': "//*[@id='page_templates']//h1",
                            'tabMyTemplates':"//*[contains(@class, 'nav-tabs')]//*[contains(@class, 'btn-link') and text()= 'My Templates']",
                            'viewTemplateList':"//*[@data-original-title='List View']",
                            'viewTemplateIcons':"//*[@data-original-title='Tile View']",
                            'tabSampleTemplates':"//*[contains(@class,'btn-link') and contains(text(),'Sample Templates')]",
                            'templateTable':"//*[@id='templateTable']",
                            'templateTableSample':"//*[@id='sampleTemplates']",
                            'exampleCategoryTemplates':"examplecategorytemplates",
                            'templateCatgoryDDL':"ddlView",
                            'categoryTemplates':"//*[contains(@id,'categorytemplates')]",
                            'addTemplate':"//*[@id='page_templates']//button[contains(.,'Add a Template')]",
                            'exportAllTemplates':"//button[contains(.,'Export')]",
                            
                            ## Add Template options
                            'uploadExternalTemplate': "//*[@class='radio']//*[@value='uploadEmc']",
                            'cloneTemplate': "//*[@class='radio']//*[@value='clone']",
                            'importExistingTemplate':"//*[@class='radio']//*[@value='upload']",
                            'createNewTemplate': "//*[@class='radio']//*[@value='create']",
                            'templateNameBox':"templateName",
                            'cloneTemplateCategory':"templatecategory",
                            'templateToBeCloned': "templateToBeCloned",
                            ### Aside button list
                            'viewDetailsBtn':"//button[contains(.,'View Details')]",
                            'editTemplateBtn':"//button[contains(.,'Edit')]",
                            'cloneTemplateBtn':"//button[contains(.,'Clone')]",
                            'deleteTemplateBtn':"//button[contains(.,'Delete')]",
                            'deployTemplateBtn': "//button[contains(.,'Deploy Service')]",
                            
                            ## Template Details button list
                            'detailEdit': "btnEdit",
                            'detailDeletTemplate':"btnDiscard",
                            'detailImportTemplate':"btnImportTemplate",
                            'detailDeployService':"deployLink",
                            'publishTemplate':"btnPublish",
                            'viewAllSettings':"btnViewAllSettings",
                            'templateThumbNail':"//*[contains(@class, 'thumbnail-template')]",
                            'searchTemplate':"//td//*[normalize-space(text())='{}']",
                            'confirmModalForm':"//*[@class='modal-dialog modal-sm']",
                            'submitConfirmForm':"btnConfirm",
                            'templateReferenceFwRepo': "referencefirmwarerepository",
                            ## Clone Template Wizard
                            'templateNameClone':"wizardTemplateName",
                            'templateCategoryClone':"wizardTemplateCategory",
                            'templateDescriptionClone':"wizardDescription",
                            'createCategoryClone':"wizardCreateCategory",
                            'manageFirmwareClone':"wizardManageFirmware",
                            'selectFirmwareRepoClone':"wizardFirmwareRepo",
                            'managePermissionClone': "wizardManagePermissions",
                            'selectAllStandardUsersClone':"wizardAllStandardUsers",
                            'addSpecificUsersClone': "wizardSpecificUsers",
                            'newUserLinkBtnClone': "new_user_link",
                            'deleteUserLinkBtnClone': "delete_user_link",
                            
                            ## Common wizard buttons
                            'btnWizardNext':"//*[@class='wizard-nav-buttons']//*[contains(.,'Next')]",
                            'btnWizardFinish':"//*[@class='wizard-nav-buttons']//*[contains(.,'Finish')]",
                            'btnWizardCancel':"//*[@class='wizard-nav-buttons']//*[contains(.,'Cancel')]",
                            'btnWizardBack':"//*[@class='wizard-nav-buttons']//*[contains(.,'Back')]",
                            'btnWizardSave':"//button[contains(text(),'Save')]",
                            'btnWizardFinish': "//button[contains(text(), 'Finish')]",
                            'alertClose': "//button[contains(text(), 'Close')]",
                            ## Create new template wizard
                            'templateNameNew': "//*[contains(@id,'templateName')]",
                            'templateCategoryNew': "//*[contains(@id,'templatecategory')]",
                            'createCategoryNew':"//*[contains(@id,'createcategory')]",
                            'templateDescriptionNew':"//*[contains(@id,'description')]",
                            'enableManageFirmwareNew': "//*[contains(@id,'manageFirmware') and @value='true']",
                            'disableManageFirmwareNew': "//*[contains(@id,'manageFirmware') and @value='false']",
                            'selectRepositoryNew': "//*[contains(@id,'firmwarepackage')]",
                            'onlyAdminPermission':"//*[contains(@id,'allAsmUsers')]",
                            'allStandardUsersPermission':".//*[contains(@id,'specificUsers')]",
                            ##Common add component wizards
                            'ddlComponents':"ddlComponents",
                            'instances':"txtInstances",
                            'btnContinueToSettings':"btnContinueToSettings",
                            'continueFormAdjustresources':"continue_form_adjustresources",
                            'verifyNoAssociateCmp':"//li[@class='form-group']/div[contains(@style,'display')]",
                            'associateAll':"associateAll",
                            'confirmComponentAdd': "submit_confirm_form",
                            ##Add Storage
                            'addStorage':"addStorage",
                            'loadingSpinner':"spinner",
                            'pageComponenteditor':"modal-content",
                            'componentStorage': "storage",
                            'targetStorage':"//select[@data-automation-id='asm_guid']",
                            'storageVolumeName':"//select[@data-automation-id='title']",
                            'storageVolumeNameNew':"//input[@data-automation-id='volume_new']",
                            'storageSize':"//input[@data-automation-id='size']",
                            'authentication':"//select[@data-automation-id='auth_type']",
                            'chapUsername':"//input[@data-automation-id='chap_user_name']",
                            'chapPassword':"//input[@data-automation-id='passwd']",
                            'IQNIP':"//textarea[@data-automation-id='iqnOrIP']",
                            'selectOS':"//select[contains(@id,'setting_operatingsystem')]",
                            'portType':"//select[contains(@id,'setting_porttype')]",
                            'storagePool':"//select[@data-automation-id='pool']",
                            'storageComponentType':"//select[@data-automation-id='type']",
                            'configureSan':"//input[@data-automation-id='configuresan']",
                            'volumeNameTemplate':"//*[@data-automation-id='volume_template']",
                            
                            'templateBuilderDetails':"templateBuilderDetails",
                            
                            #Add Server
                            'addServer':"addServer",
                            'dropdownToggle':"//*[contains(@class,'btn btn-default dropdown-toggle')]",
                            'lnkAdjustResourcesServer':"lnkAdjustResources_Server",
                            'componentDuplicate':"component_duplicate",
                            'componenttoduplicate':"componenttoduplicate",
                            'continueFormAdjustresources':"continue_form_adjustresources",
                            'serverSource':"//*[contains(text(),'Server Source')]",
                            'componentToDuplicate':"componenttoduplicate",
                            'componentServer':"server",
                            'pageAdjustResources':"page_adjustresources",
                            'submitFormAdjustresources1':"submit_form_adjustresources1",
                            'componentNew':"component_new",
                            'componentEdit':"//button[contains(@class,'btn btn-primary btn-edit')]",
                            'btnCloneFromReference':"btnCloneFromReference",
                            'selectReferenceServer':"//*[@name='chkDevice']",
                            'submitFormCloneServer':"submit_form_clone",
                            'autoGenerateHostName':"//input[@data-automation-id='generate_host_name']",
                            'hostNameTemplate':"//input[@data-automation-id='os_host_name_template']",
                            'osImage':"//select[@data-automation-id='razor_image']",
                            'osImageAlt':"//select[contains(@id, 'setting_razor_image_asm')]",
                            'installHyperV':".//*[contains(@id,'setting_hyperv_install')]",
                            'osImageVersion':"//*[contains(@id,'setting_os_image_version')]",
                            'productKey':".//*[contains(@id,'setting_product_key')]",
                            'domainName':"//*[contains(@id,'setting_domain_name')]",
                            'domainUserName':"//*[contains(@id,'setting_domain_admin_user')]",
                            'domainAdminPassword':"//*[contains(@id,'setting_domain_admin_password')]",
                            'domainAdminConfirmPassword':"//*[contains(@id,'setting_domain_admin_password_confirm')]",
                            'adminPassword':"//input[@data-automation-id='admin_password']",
                            'confirmAdminPassword':"//input[@data-automation-id='admin_confirm_password']",
                            'fqDomainName':"//*[contains(@id,'setting_fqdn')]",
                            'closePopup':"//button[@type='button' and text()='Close']",
                            'ntpServer':"//input[@data-automation-id='ntp_server']",
                            'setServerPool':"//select[@data-automation-id='server_pool']",
                            'submitFormAdjustresources2':"submit_form_adjustresources2",
                            'setVsan':"//*[contains(@id,'setting_local_storage_vsan')]",
                            'isciInitiator':"//select[@data-automation-id='iscsi_initiator']",
                            'equalLogicMem':"//select[@data-automation-id='esx_mem']",
                            #Hardware Setting for Server
                            'hardwareSettingTab':"//text()[contains(.,'Hardware Setting')]/parent::a[@role='button']",
                            'targetBootDevice':"//select[@data-automation-id='target_boot_device']",
                            'selectRaidLevel':"ddlBasicRaidLevel",
                            'raidTypeBasic':"raidtype_basic",
                            'raidTypeAdvanced':"raidtype_advanced",
                            'btnAddVirtualDisk':"btnAddVirtualDisk",
                            'raidLevel':"//table/tbody/tr/td/select[@id='ddlAdvancedRaidLevel{}']",
                            'internalVirtualdiskTable':"//*[@id='ddlAdvancedRaidLevel{}']/parent::td/parent::tr",
                            'internalVirtualDiskTable':"//table/tbody/tr[contains(@ng-class,'validVirtualDisk') and contains(@ng-class,'external')]",
                            'ddlDiskComparator':"//table/tbody/tr/td/select[@id='ddlDiskComparator{}']",
                            'ddlNumberOfDisks':"ddlNumberOfDisks{}",
                            'enableGlobalHotspares': "//*[@name='enableglobalhotsparesexternal']",
                            'totalHotsparesInt': "globalhotspares",
                            'minimumSSDInt':"minimumssd",
                            'totalHotsparesExt':"globalhotsparesexternal",
                            'btnExternalVirtualDisk':"//button[contains(normalize-space(text()), 'Add External Virtual Disk')]",
                            'raidLevelExternal':"//table/tbody/tr/td/select[@id='ddlAdvancedRaidLevelExternal{}']",
                            'externalVirtualDiskTable':"//table/tbody/tr[contains(@ng-class,'validVirtualDisk') and contains(@ng-class,'external')]",
                            'enableGlobalHotsparesExt':"//*[@name='enableglobalhotsparesexternal']",
                            'totalHotsparesExt':"globalhotsparesexternal",
                            'minimumSSDExt': "minimumssdexternal",
                            'selectServerPool':"//select[@data-automation-id='server_pool']",
                            'biosSettingsTab': "//text()[contains(.,'BIOS Settings')]/parent::a",
                            'nodeInterleaving':"//*[contains(@id,'setting_NodeInterleave')]",
                            'networkSettingTab':"//text()[contains(.,'Network Settings')]/parent::a",
                            'btnDeleteInterface':"//button[contains(@ng-click, 'interface.delete')]",
                            'btnConfirmDeleteInterface':"//button[contains(text(), 'Confirm Delete')]",
                            'btnAddInterface':"btnAddInterface",
                            'interfaceAccordion': "accordionbody",
                            'fabricEthernet': "//*[@id='fabricTypeInputs']/div[contains(.,'Ethernet')]/label/input",
                            'fabricFibreCh': "//*[@id='fabricTypeInputs']/div[contains(.,'Fibre Channel')]/label/input",
                            'portLayout': "ddlNicTypeSelect",
                            'partitioning':"//*[@id='partitioning']/div/label/input",
                            'redundancy': "//*[@id='redundancy']/div/label/input",
                            'defaultGateway':"//select[@data-automation-id='default_gateway']",
                            'templateBuilderDetails': "templateBuilderDetails",
                            'submitFormAdjustresources2':"submit_form_adjustresources2",
                            'cancelConfirmForm': "cancel_confirm_form",
                            'popupModal':"popupModal",
                            'validateSettings': "templatebuilder_validatesettings",
                            'validateSettingsTableRows':".//*[@id='page_validatesettings']/table/tbody/tr",
                            'validateSettingsInfo': "//*[@id='page_validatesettings']/header/p",
                            'validServerTag': "//*[@id='page_validatesettings']/table/tbody/tr[{}]/td[5]",
                            'cancelFormValidateSettings':"cancel_form_exporttemplate",
                            'btnPublish': "btnPublish",
                            'confirmDailogBox':"modal-content",
							
							#Add Cluster
                            "addCluster":"addCluster",
                            'componentCluster': "cluster",
                            "txtInstances":"txtInstances",
                            "associateAll":"associateAll",
                            "lnkAdjustResources_Cluster":"lnkAdjustResources_Cluster",
                            "continueFormAdjustResources":"continue_form_adjustresources",
                            "targetVirtualMachineManager":"//select[@data-automation-id='asm_guid']",
                            "dataCenterName":"//select[@data-automation-id='datacenter']",
                            "newDatacenterName":".//*[@data-automation-id='$new$datacenter']",
                            "clusterName":"//*[@data-automation-id='cluster']",
                            "clusterNameHyper":"//select[@data-automation-id='name']",
                            "newClusterName":"//*[@data-automation-id='$new$cluster']",
                            "newClusterNameHyper":"//input[@data-automation-id='$new$name']",
                            "haEnabled":"//input[@data-automation-id='ha_config']",
                            "drsEnabled":"//input[@data-automation-id='drs_config']",
                            "vsanEnabled":"//input[@data-automation-id='vsan_enabled']",
                            "storageDrs":"//*[contains(@id,'setting_sdrs_config_asm')]",
                            "storageDrsCluster":"//*[contains(@id,'setting_sdrs_name_asm')]",
                            "storageSelect":"//*[contains(text(),'Datastores to Add to Cluster')]//parent::div//parent::li/div[2]/ul/li/div/label/input",
                            "standard":"//input[@value='standard']",
                            "distributed":"//input[@value='distributed']",
                            "vSphereVDSSettings":"//text()[contains(.,'vSphere VDS Settings')]/parent::a",
                            "vdsNames":"//select[contains(@data-automation-id,'vds_name')]",
                            "newVDSNames":"//input[contains(@data-automation-id,'$new$vds_name')]",
                            "portGroups":"//select[contains(@data-automation-id,'vds_pg')]",
                            "newPortGroups":"//input[contains(@data-automation-id,'$new$vds_pg')]",
                            "failureTolerance":"//*[contains(@id,'setting_failure_tolerance_method_asm')]",
                            "settingFailures":"//*[contains(@id,'setting_failures_number_asm')]",
                            "hostGroup":"//select[@data-automation-id='hostgroup']",
                            "newHostGroup":"//input[@data-automation-id='$new$hostgroup']",
                            "hypervClusterIP":"//input[@data-automation-id='ipaddress']",
                            "submitFormAdjustResources":"submit_form_adjustresources2",
                            
                            #scale down Template
                            "clusterIP":"ipLinkCluster",
                            "clusterTable":"//*[@id='page_delete_resources']//table[@id='clusterTable']/tbody/tr",
                            "addComponent":"addComponent",
                            "deleteComponent":"lnkDeleteResources",
                            "storageTable":"//*[@id='page_delete_resources']//table[@id='storageTable']/tbody/tr",
                            "serverTable":"//*[@id='page_delete_resources']//table[@id='serverTable']/tbody/tr",
                            "vmTable":"//*[@id='page_delete_resources']//table[@id='vmTable']/tbody/tr",
                            "appDegrade":"applicationRect",
                            "stopManagingAPP":"stopmanaging_stopmanaging",
                            "submitFormDeleteResources":"submit_form_delete_resources",
                            
                            #
                            "service":"//*[@id='serviceActions']/div[4]/div[3]/span[2][contains(.,'Deployed')]",
                            "state":"//*[@id='serviceActions']/div[3]/div[2]/span[2]",
                            "deleteFirstResource":"(//tbody/tr[1]/td[1]/input)[1]",
                            
                            #Add Application
                            "addApplication":"addApplication",
                            "selectApplication":"ddlAddApplication",
                            "addClick":"//*[@ng-click='Application.addApplication()']",
                            "installPackages":"//*[@data-automation-id='install_packages']",
                            "uploadShare":"//*[@data-automation-id='upload_share']",
                            "uploadFile":"//*[@data-automation-id='upload_file']",
                            "executeFileCommand":"//*[@data-automation-id='execute_file_command']",
                            "yumProxy":"//*[@data-automation-id='yum_proxy']",
                            "selectServer":"//*[contains(text(),'Server')]/parent::tr//input",
                            "selectServerVM":"//*[@class='checkColumn']/input",
                            "saySomething":"//*[@data-automation-id='title']",
                            "share":"//*[@data-automation-id='share']",
                            "installCommand":"//*[@data-automation-id='install_command']",
                            "sourceLocation":"//*[@data-automation-id='source']",
                            "editTemplateLink":"editTemplateLink",
                            "applicationAddTable":"//table[@class='table table-striped identifyApplicationsTable table-condensed']/tbody/tr/td[3]",
                            "changeApplicationOrderUP":"//table[@class='table table-striped identifyApplicationsTable table-condensed']/tbody/tr[2]/td[2]//*[@ng-click='Application.moveUp($index)']",
                            "changeApplicationOrderDown":"//table[@class='table table-striped identifyApplicationsTable table-condensed']/tbody/tr[2]/td[2]//*[@ng-click='Application.moveDown($index)']",
                            "removeApplication":"//table[@class='table table-striped identifyApplicationsTable table-condensed']/tbody/tr[3]/td[1]//*[@ng-click='Application.removeApplication(application)']",
                            
                            #Add Vm
                            'addVM':"addVM",
                            'componentVM': "vm",
                            'lnkAdjustResourcesVM': "lnkAdjustResources_VM",
                            'autoGenerateVmName': "//*[@data-automation-id='vm_generate_name_id']",
                            'vmDescription': "//*[contains(@id,'setting_description')]",
                            'vmTemplate': "//*[@data-automation-id='template']",
                            'vmPath': "//*[@data-automation-id='path']",
                            'vmNetwork': "//label[contains(text( ),'Networks')]/parent::div/parent::div//input",
                            'vmDefaultGateway': "//*[contains(@id,'setting_default_gateway')]",
                            'vmStartAction': "//select[contains(@id,'setting_start_action')]",
                            'vmStopAction': "//select[contains(@id,'setting_stop_action')]",
                            'autoGenerateHostName': "//input[@data-automation-id='generate_host_name']",
                            'vmHostName': "//input[@data-automation-id='os_host_name_template']",
                            'vmOSImage': "//select[@data-automation-id='razor_image']",
                            'vmOSImageVersion': "//select[@data-automation-id='os_image_version']",
                            'vmOSPassword': "//input[@data-automation-id='admin_password']",
                            'vmOSPasswordCnfrm': "//input[@data-automation-id='admin_confirm_password']",
                            'vmOSProductKey': "//input[@data-automation-id='product_key']",
                            'vmSettingTab': "//text()[contains(.,'Virtual Machine Setting')]/parent::a[@role='button']",
                            'vmCPUCount': "//input[contains(@id,'setting_cpu_count')]",
                            'vmMemoryMB': "//input[contains(@id,'setting_memory_in_mb')]",
                            
                            #exportTemplate
                            "exportTemplate":"//*[@ng-click='templates.exportTemplate()']",
                            "fileName":"fileName",
                            "useEncPwdFromBackup":"useEncPwdFromBackup",
                            "encryptionPassword":"encryptionPassword",
                            "verifyEncryptPassword":"verifyEncryptPassword",
                            "export":"submit_form_exporttemplate",
                            "exportAll":"//text()[contains(.,'Export All')]/parent::button",
                            
                            #importTemplate
                            "selectTemplate":"//*[@ng-model='importtemplate.selectedId']",
                            "importButton":"//*[@ng-click='importtemplate.import()']",
                            "templateAfterImoprt":"//*[@id='page_templatebuildersvg']/header/ol/li[3]",
                            
                            #validateVDSSetting
                            
                            "vmWareCluster":"//*[contains(text(), 'VMWare Cluster')]",
                            "clusterSettings":"//*[contains(text(), 'Cluster Settings')]",
                            "vSphereVDSSettings":"//*[contains(text(), 'vSphere VDS Settings')]",
                            "vds":"//a[@class='in' and @role='button']/ul//*[contains(text(), 'VDS')]",
                            
                            #Add Attachement
                            "btnAddAttachments":"btnAddAttachments",
                            "tooBigAttachement":"//div[@ng-if='AddAttachmentModal.tooBigError']",
                            "btnAttachment":"btnAttachment",
                            "cancelAttachement":".//*[@id='addonmodulecancel']",
                            
                            #scaleUP
                            "addComponent":"addComponent",
                            "scaleUpNetwork":"//*[@id='addComponent_network']/button",
                            "ddlAvailableNetworks":"ddlAvailableNetworks",
                            "btn_addavailablenetwork":"btn_addavailablenetwork",
                            "selectResource":"//span[contains(text(),'Select Resources')]",
                            "selctHost":"(//*[contains(text(),'All Hosts')]/parent::li/input)",
                            "selcetVM":"(//*[contains(text(),'vCenter Virtual Machine')]/parent::li/input)",
                            "saveNetworkButton":"save_new_setting",
                            
                            #DeployService
                            'DeployNavTabs': "//*[@class='wizard-step-buttons']/ul/li",
                            'selectedTemplate': "selectedTemplate",
                            'serviceName': "templatename",
                            'serviceDescription': "description",
                            'numDeployments': "numDeployments",
                            'manageFirmware': "managefirmware",
                            'firmwarePackage': "firmwarepackage",
                            'specificUser': "//*[contains(@id,'allStandardUsers')]",
                            'addNewUsers': "new_user_link",
                            'usersFormCancel':"usersFormCancel",
                            'userFormTable': "//table[@st-table='addUsersController.userList']/tbody/tr",
                            'usersFormSave': "usersFormSave",
                            'deployNow': "deploynow",
                            'scheduleDeployment': "schedule",
                            'deploymentServerPool': "//select[@data-automation-id='server_source']",
                            'deploymentServerSelect': "//select[@data-automation-id='server_select']",
                            'scheduleCalendar': "//*[contains(@class,'calendar')]",
                            'toggleDateTime': "//*[@data-action= 'togglePicker']",
                            'incrementMinutes': "//*[@data-action='incrementMinutes']/span",
                            'decrementMinutes': "//*[@data-action='decrementMinutes']/span",
                            'decrementHours': "//*[@data-action='decrementHours']/span",
                            'selectedDeployTime': "//input[contains(@ng-bind,'selectedDate')]",
                            #view Template
                            'pageTemplatebuilder': "page_templatebuilder",
                            'templateComponents': "//*[contains(@id,'component')]",
                            'formViewAllSettings': "//form[@id='formDeploymentDetails']/div/div",
                            'collapsedTabs': "//*[contains(@class,'collapsed-show')]",
                            
                            #getAllComponents
                            "viewComponents":".//*[@id='popover-content-servers']//*[contains(text(),'View')]",
                            "viewSettings":"//*[@id='collapse{}']/div/div//label",
                            
                            #creatTemplate_specificStandarUser
                            "usersTable":"//table[@st-table='addUsersController.userList']/tbody",
                            "btnEditTemplateName":"btnEditTemplateName",
                            "addStandardUser":"//text()[contains(.,'ASM Administrators and Specific Standard Users')]/parent::label/input",


                            
                           
                       }
        return TemplatesObjects.get(key)